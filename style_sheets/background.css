@font-face {
    font-family: cards;
    src: url(/fonts/CardCharactersNarrowFigures.ttf);
}

#cardsContainer {
    position:absolute;
    top: 38%;
    left: 50%;
    translate: -50% -50%;
    
    width: 20rem;
    height: 28rem;
}

.cards{
    position: absolute;
    transform-origin: center 56rem;
    
    width: inherit;
    height: inherit;
    border-radius: 2rem;

    background-color: #fff;
    --color: white;
    font-size: 10em;
    line-height: 5rem;
    border: 0.2rem solid rgb(190, 190, 190);
    box-shadow: 0 0.3rem 0.5rem 0 rgba(0, 0, 0, 0.2), 0 0.4rem 1.25rem 0 rgba(0, 0, 0, 0.19);
    transition-duration: 0.2s;
}

.cards:hover {
    transform: translate(0, -6%);
}

@keyframes fan {
    0% {
        rotate: 0deg;
        translate: 0 0;
    }
    15% {
        translate: 0 5%;
    }
    85% {
        translate: 0 -25%;
    }
    100% {
        rotate: var(--r);
        translate: 0 -24%;
    }
}
@keyframes cardsIdle {
    0% {
        rotate: var(--r);
    }
    100% {
        rotate: calc(var(--r)*0.99);
    }
}


.cardsAnimation {
    animation: fan 0.9s ease-in-out 0.1s forwards normal,
    cardsIdle 1.4s ease-in-out 1s infinite alternate;
}

.cardsC {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    width: inherit;
    height: inherit;
}

.cardsC h1 {
    margin: 0;
    color: var(--color); 
    font-size: 100%;
    font-family: cards;
    line-height: 1em;
    padding-bottom: 0.1em;
}

.cardTL {
    position: absolute; 
    display: flex;
    flex-direction: column;
    align-items: center;
    
    left: 2.5%; 
    top: 3.5%;
    
    width: 25%;
    height: 50%;
}

.cardTL p {
    color: var(--color); 
    font-size: 50%;
    font-family: cards;
    margin: 0;
    line-height: normal;
}

.cardBR {
    position: absolute; 
    display: flex;
    flex-direction: column;
    align-items: center;

    right: 2.5%; 
    bottom: 3.5%; 

    width: 25%;
    height: 50%;

    rotate: 180deg;
}

.cardBR p {
    color: var(--color); 
    font-size: 50%;
    font-family: cards;
    margin: 0;
    line-height: normal;
}

#slotMachine {
    display: flex;
    position: absolute;
    justify-content: space-evenly;
    align-items: center;

    top: 20rem;
    left: 50%;
    translate: -50% -50%;
    margin-top: 30vh;

    width: 50rem;
    height: 25rem;

    box-shadow: inset 1px 1px 0.9em rgba(255, 255, 255, 0.9);
    border-radius: 4em;
    border-style: solid;
    border-width: 0.2em;
    border-color: rgba(170, 154, 62, 0.75);
    background-image: linear-gradient(rgb(221, 181, 0),rgb(255, 227, 149), rgb(182, 139, 0));
}

@keyframes slotMachineAnimation {
    0%{
        height: 25rem;
        width: 50rem;
    }  
    15%{
        height: 21em;
        width: 54rem;
        top: 22rem;
    }  
    75%{
        height: 30em;
        width: 48rem;
        top: 2rem;
    }
    85%{
        width: 48rem;
    }
    95%{
        height: 21em;
        width: 58rem;
        top: 22rem;
    }
    100%{
        height: 25em;
        width: 50rem;
        top: 20rem;
    }
}

.slotMachineInitAnimation {
    animation: slotMachineAnimation 1s ease-in-out 0.1s none normal;
}

.reel {
    width: 28%;
    height: 82%;

    --iconHeight: ;
    --reelDisplacement: ;
    --animationDelay: ;
    --animationTime: ;
    --initalReelPosition: ;
    --reelOffset: 3em;

    box-shadow: inset 0 1px 0.7em black;
    overflow: hidden;
    border-radius: 2em;
    border-style: solid;
    border-width: 0.2em;
    border-color: rgba(170, 154, 62, 1);
    background-image: url(/images/assets/reel.png);
    background-repeat: repeat-y;
    background-size: 100% auto;
    background-position: 0 calc((var(--reelOffset) + var(--initalReelPosition)*var(--iconHeight)));
}

@keyframes reelAnimation {
    0%{
        background-position: 0 calc(var(--reelOffset) + var(--initalReelPosition)*var(--iconHeight));
    }
    95%{
        background-position: 0 calc(var(--reelOffset)*4  + var(--reelDisplacement)*var(--iconHeight))
    }
    100%{
        background-position: 0 calc(var(--reelOffset) + var(--reelDisplacement)*var(--iconHeight))
    }
}

.reelAnimation {
    animation: reelAnimation var(--animationTime) ease-in-out var(--animationDelay) forwards normal;
}

.staticBgContainer {
    position: absolute;

    left: 50%;
    translate: -50% 0;
}

.chipStacks{
    position: absolute; 
    width: 0; 
    transform-origin: center 200rem; 
    translate: -50% 0;
    margin-top: 35vh;
    --r: 0;
}

@keyframes chipStacksAnimation {
    0%{
        width: 10em;
        rotate: 0deg;
        translate: -50% 0;
    }
    100%{
        width: 30em;
        rotate: var(--r);
        translate: -50% -5em;
    }
}
@keyframes chipStacksIdle {
    0% {
        rotate: var(--r);
    }
    100% {
        rotate: calc(var(--r)*0.995);
    }
}

.chipStacksAnimation {
    animation: chipStacksAnimation 0.6s ease-in-out 0.9s forwards normal,
    chipStacksIdle 1.4s ease-in-out 1.5s infinite alternate;
}

.dice {
    position: absolute; 
    width: 20rem; 
    top: 100vh;
    margin-top: 35vh;
}

@keyframes diceAnimation {
    0% {
        top: 100vh;
    }
    70% {
        top: -5vh;
    }
    100% {
        top: 15em;
    }
}

@keyframes diceIdle {
    0% {
        top: 15em;
    }
    100%{
        top: 12em;
    }
}

.diceAnimation {
    animation: diceAnimation 0.6s ease-in-out var(--animationDelay) forwards normal,
    diceIdle 1.4s ease-in-out calc(0.6s + var(--animationDelay)) infinite alternate;
}